version: '3.7'

volumes:
    duplicati:
    nextcloud:
    mariadb:
    codimd:
    ghost:
    vikunja:
    ombi:
    nginx_conf:
    nginx_html:

services:

    # https://hub.docker.com/r/linuxserver/ombi
    ombi:
        image: linuxserver/ombi
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ: ${TZ}
        volumes:
            - ombi:/config
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.ombi.entrypoints: https
            traefik.http.routers.ombi.tls.certresolver: tlschallenge
            traefik.http.routers.ombi.rule: Host(`${OMBI_HOST}`)
            traefik.http.routers.ombi.middlewares: secureheaders
        networks:
            - frontend
        links:
            - sonarr
            - radarr
            - plex

    # https://hub.docker.com/_/nextcloud/
    nextcloud:
        image: nextcloud
        volumes:
            - nextcloud:/var/www/html
        environment:
            MYSQL_HOST: mariadb
            MYSQL_DATABASE: nextcloud
            MYSQL_USER: nextcloud
            MYSQL_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
            TZ: ${TZ}
            NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_HOST}
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.nextcloud.entrypoints: https
            traefik.http.routers.nextcloud.tls.certresolver: tlschallenge
            traefik.http.routers.nextcloud.rule: Host(`${NEXTCLOUD_HOST}`)
            traefik.http.routers.nextcloud.middlewares: secureheaders, cardcaldav
            traefik.http.middlewares.cardcaldav.replacepathregex.regex: ^/.well-known/(card|cal)dav
            traefik.http.middlewares.cardcaldav.replacepathregex.replacement: /remote.php/dav/
        networks:
            - frontend
            - backend
        links:
            - mariadb

    # https://hub.docker.com/r/linuxserver/codimd
    codimd:
        image: linuxserver/codimd
        volumes:
          - codimd:/config
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ: ${TZ}
            DB_HOST: mariadb
            DB_NAME: codimd
            DB_USER: codimd
            DB_PASS: ${CODIMD_DB_PASSWORD}
            DB_PORT: 3306
            CMD_IMAGE_UPLOAD_TYPE: filesystem
            CMD_DOMAIN: ${CODIMD_HOST}
            CMD_PROTOCOL_USESSL: 'true'
            CMD_URL_ADDPORT: 'false'
            CMD_ALLOW_PDF_EXPORT: 'true'
            CMD_ALLOW_GRAVATAR: 'true'
            CMD_ALLOW_FREEURL: 'true'
            CMD_DEFAULT_PERMISSION: private
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.codimd.entrypoints: https
            traefik.http.routers.codimd.tls.certresolver: tlschallenge
            traefik.http.routers.codimd.rule: Host(`${CODIMD_HOST}`)
            traefik.http.routers.codimd.middlewares: secureheaders, basicauth
        networks:
            - frontend
            - backend
        links:
            - mariadb

    # https://hub.docker.com/_/ghost/
    ghost:
        image: ghost
        environment:
            TZ: ${TZ}
            url: https://${GHOST_HOST}
            database__client: mysql
            database__connection__host: mariadb
            database__connection__database: ghost
            database__connection__user: ghost
            database__connection__password: ${GHOST_DB_PASSWORD}
        volumes:
            - 'ghost:/var/lib/ghost/content:rw'
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.ghost.entrypoints: https
            traefik.http.routers.ghost.tls.certresolver: tlschallenge
            traefik.http.routers.ghost.rule: Host(`${GHOST_HOST}`)
            traefik.http.routers.ghost.middlewares: secureheaders, basicauth
        networks:
            - frontend
            - backend
        links:
            - mariadb

    # https://hub.docker.com/r/vikunja/api
    vikunja-api:
        image: vikunja/api
        environment:
            VIKUNJA_DATABASE_HOST: mariadb
            VIKUNJA_DATABASE_TYPE: mysql
            VIKUNJA_DATABASE_DATABASE: vikunja
            VIKUNJA_DATABASE_USER: vikunja
            VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_DB_PASSWORD}
            VIKUNJA_SERVICE_ENABLEREGISTRATION: 'false'
            VIKUNJA_SERVICE_TIMEZONE: ${TZ}
        volumes: 
            - vikunja:/app/vikunja/files
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.vikunja-api.entrypoints: https
            traefik.http.routers.vikunja-api.tls.certresolver: tlschallenge
            traefik.http.routers.vikunja-api.rule: Host(`${VIKUNJA_HOST}`) && PathPrefix(`/api/v1`)
            traefik.http.routers.vikunja-api.middlewares: secureheaders
        networks:
            - frontend
            - backend
        links:
            - mariadb

    # https://hub.docker.com/r/vikunja/frontend
    vikunja:
        image: vikunja/frontend
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.vikunja.entrypoints: https
            traefik.http.routers.vikunja.tls.certresolver: tlschallenge
            traefik.http.routers.vikunja.rule: Host(`${VIKUNJA_HOST}`) && PathPrefix(`/`)
            traefik.http.routers.vikunja.middlewares: secureheaders
        networks:
            - frontend
            - backend

    # https://hub.docker.com/r/linuxserver/duplicati
    duplicati:
        image: linuxserver/duplicati
        environment:
            PUID: 0
            PGID: 0
            TZ: ${TZ}
        volumes:
            - duplicati:/config:rw
            - plex:/sources/plex:ro
            - nzbget:/sources/nzbget:ro
            - sonarr:/sources/sonarr:ro
            - radarr:/sources/radarr:ro
            - hydra:/sources/hydra:ro
            - nextcloud:/sources/nextcloud:ro
            - mariadb:/sources/mariadb:ro
            - codimd:/sources/codimd:ro
            - ghost:/sources/ghost:ro
            - vikunja:/sources/vikunja:ro
            - ombi:/sources/ombi:ro
            - nginx_conf:/sources/nginx_conf:ro
            - nginx_html:/sources/nginx_html:ro
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.duplicati.entrypoints: https
            traefik.http.routers.duplicati.tls.certresolver: tlschallenge
            traefik.http.routers.duplicati.rule: Host(`${DUPLICATI_HOST}`)
            traefik.http.routers.duplicati.middlewares: secureheaders, basicauth
        networks:
            - frontend

    # https://hub.docker.com/r/netdata/netdata
    netdata:
        image: netdata/netdata
        hostname: ${NETDATA_HOST}
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ: ${TZ}
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - /etc/passwd:/host/etc/passwd:ro
            - /etc/group:/host/etc/group:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.netdata.entrypoints: https
            traefik.http.routers.netdata.tls.certresolver: tlschallenge
            traefik.http.routers.netdata.rule: Host(`${NETDATA_HOST}`)
            traefik.http.routers.netdata.middlewares: secureheaders, basicauth
        networks:
            - frontend

    # https://hub.docker.com/_/nginx/
    nginx:
        image: nginx
        environment:
            TZ: ${TZ}
        volumes:
            - nginx_conf:/etc/nginx
            - nginx_html:/usr/share/nginx/html
        labels:
            traefik.enable: true
            traefik.docker.network: mediaserver_frontend
            traefik.http.routers.nginx.entrypoints: https
            traefik.http.routers.nginx.tls.certresolver: tlschallenge
            traefik.http.routers.nginx.rule: Host(`${NGINX_HOST}`)
            traefik.http.routers.nginx.middlewares: secureheaders, basicauth
        networks:
            - frontend

    # https://hub.docker.com/_/mariadb/
    mariadb:
        image: mariadb
        command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
        volumes:
            - mariadb:/var/lib/mysql
            - ./utf8.cnf:/etc/mysql/conf.d/utf8.cnf
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            TZ: ${TZ}
        networks:
            - backend
