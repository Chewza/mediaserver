# Must be set in the global scope see: https://forum.nginx.org/read.php?2,152294,152294
# Why this is important especially with Plex as it makes a lot of requests
# http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html / https://www.peterbe.com/plog/ssl_session_cache-ab
ssl_session_cache		shared:SSL:10m;
ssl_session_timeout		10m;

# redirect all traffic to https
server {
	listen 80;
	server_name _;
	# Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
	return 301 https://$host$request_uri;
}

upstream portainer {
	server	portainer:9000;
}

# main server block
server {
	listen 443 ssl http2 default_server;
	server_name _;
	
	include		/config/nginx/ssl.conf;

	client_max_body_size	0;
	
	location / {
		return 404;
	}

	#
	# https://portainer.readthedocs.io/en/stable/faq.html#how-can-i-configure-my-reverse-proxy-to-serve-portainer
	#
	location /portainer/ {
		proxy_http_version		1.1;
		proxy_set_header		Connection "";
		proxy_pass				http://portainer/;
	}
	location /portainer/ws/ {
		proxy_http_version		1.1;
		proxy_set_header		Upgrade $http_upgrade;
		proxy_set_header		Connection "upgrade";
		proxy_pass				http://portainer/ws/;
	}

	location /hydra {
		proxy_pass			http://hydra:5075;
	}

	location /sonarr {
		proxy_pass			http://sonarr:8989;
		include				/config/nginx/proxy.conf;
		include				/config/nginx/auth.conf;
	}

	location /radarr {
		proxy_pass			http://radarr:7878;
		include				/config/nginx/proxy.conf;
		include				/config/nginx/auth.conf;
	}

	location /plexpy/ {
		proxy_pass			http://plexpy:8181;
		include				/config/nginx/proxy.conf;
		include				/config/nginx/auth.conf;
	}

	location /nzbget {
		proxy_pass			http://nzbget:6789;
		include				/config/nginx/proxy.conf;
		include				/config/nginx/auth.conf;
	}

	location /transmission {
		proxy_pass			http://transmission:9091;
		include				/config/nginx/proxy.conf;
		include				/config/nginx/auth.conf;
	}
}

server {
	#
	# https://github.com/toomuchio/plex-nginx-reverseproxy
	#
	
	# http2 can provide a substantial improvement for streaming
	# https://blog.cloudflare.com/introducing-http2/
	listen 443 ssl http2;
	server_name plex.*;
	
	#Faster resolving, improves stapling time. Timeout and nameservers may need to be adjusted for your location Google's have been used here.
	resolver					8.8.4.4 8.8.8.8 valid=300s;
	resolver_timeout			10s;

	include		/config/nginx/ssl.conf;

	#Plex has A LOT of javascript, xml and html. This helps a lot, but if it causes playback issues with devices turn it off. (Haven't encountered any yet)
	gzip						on;
	gzip_vary					on;
	gzip_min_length				1000;
	gzip_proxied				any;
	gzip_types					text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
	gzip_disable				"MSIE [1-6]\.";

	# Forward real ip and host to Plex
	proxy_set_header			Host $http_host;
	proxy_set_header			X-Real-IP $remote_addr;
	proxy_set_header			X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header			X-Forwarded-Proto $scheme;

	# Websockets
	proxy_http_version			1.1;
	proxy_set_header			Upgrade $http_upgrade;
	proxy_set_header			Connection "upgrade";

	# Buffering off send to the client as soon as the data is received from Plex.
	proxy_redirect				off;
	proxy_buffering				off;

	location / {
		if ($request_method != OPTIONS) {
			set $test A;
		}
		if ($http_x_plex_device_name = '') {
			set $test "${test}B";
		}
		if ($arg_X-Plex-Device-Name = '') {
			set $test "${test}C";
		}
		if ($http_user_agent !~ (SmartTV)) {
			set $test "${test}D";
		}

		#If the client isn't an app like a SmartTV and such, forward them to the web interface.
		if ($test = ABCD) {
			rewrite ^/$ https://$http_host/web/index.html;
		}

		proxy_pass https://plex:32400;
	}
}

# sample reverse proxy config without url base, but as a subdomain "cp", ip and port same as above
# notice this is a new server block
#server {
#	listen 443 ssl;
#
#	root /config/www;
#	index index.html index.htm index.php;
#
#	server_name cp.*;
#
#	ssl_certificate /config/keys/letsencrypt/fullchain.pem;
#	ssl_certificate_key /config/keys/letsencrypt/privkey.pem;
#	ssl_dhparam /config/nginx/dhparams.pem;
#	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
#	ssl_prefer_server_ciphers on;
#
#	client_max_body_size 0;
#
#	location / {
#		auth_basic "Restricted";
#		auth_basic_user_file /config/nginx/.htpasswd;
#		include /config/nginx/proxy.conf;
#		proxy_pass http://192.168.1.50:5050;
#	}
#}
