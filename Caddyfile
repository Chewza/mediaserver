(secure_headers) {
    header / {
        # Enable HTTP Strict Transport Security (HSTS) to force clients to always
        # connect via HTTPS (do not use if only testing)
        Strict-Transport-Security "max-age=31536000;"
        # Enable cross-site filter (XSS) and tell browser to block detected attacks
        X-XSS-Protection "1; mode=block"
        # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type
        X-Content-Type-Options "nosniff"
        # Disallow the site to be rendered within a frame (clickjacking protection)
        X-Frame-Options "DENY"
    }
}
plex.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    # use built-in authentication
    proxy / plex:32400 {
        transparent
        websocket
    }
}
tautulli.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        except /api/v2
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / tautulli:8181 {
        header_upstream X-Forwarded-Host {host}
        transparent
    }
}
nzbget.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / nzbget:6789 {
        transparent
    }
}
sonarr.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        except /api
        except /feed
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / sonarr:8989 {
        transparent
    }
}
radarr.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        except /api
        except /feed
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / radarr:7878 {
        transparent
    }
}
hydra.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    # use built-in authentication
    proxy / hydra:5076 {
        transparent
    }
}
transmission.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / transmission:9091 {
        transparent
    }
}
nextcloud.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    # reauth {
    #     path /
    #     simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    # }
    proxy / nextcloud:80 {
        transparent
    }
}
cloud9.{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / cloud9:8080 {
        transparent
    }
}
{$CLOUDFLARE_DOMAIN} {
    gzip
    import secure_headers
    tls {
        dns cloudflare
    }
    reauth {
        path /
        simple {$HTTP_AUTH_USER}={$HTTP_AUTH_PASS}
    }
    proxy / ghost:2368 {
        transparent
        websocket
    }
}

