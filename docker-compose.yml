version: '3.4'
services:

    # https://github.com/plexinc/pms-docker
    plex:
        image: "plexinc/pms-docker:plexpass"
        restart: unless-stopped
        volumes:
            - ./data/plex/config:/config
            - ./data/plex/media/tv:/tv
            - ./data/plex/media/movies:/movies
            - /tmp:/transcode
        env_file:
            - ./plex.env

    # https://github.com/Tautulli/Tautulli-Docker
    tautulli:
        image: "tautulli/tautulli"
        restart: unless-stopped
        volumes:
            - ./data/tautulli/config:/config
            - ./data/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
        env_file:
            - ./common.env
        healthcheck:
            # test: if curl -f http://localhost:8181/ && curl -f http:/plex:32400/web/ ; then exit 0 ; else exit 1 ; fi
            test: if curl -f http://plex:32400/web/ ; then exit 0 ; else exit 1 ; fi
            interval: 10s
            retries: 24 # plex takes 3 minutes, so give tautulli lots of retries at a short interval

    # https://github.com/linuxserver/docker-nzbget
    nzbget:
        image: "linuxserver/nzbget"
        restart: unless-stopped
        volumes:
            - ./data/nzbget/config:/config
            - ./data/nzbget/downloads:/downloads
        env_file:
            - ./common.env
        healthcheck:
            test: curl --fail http://localhost:6789/ || exit 1

    # https://github.com/linuxserver/docker-sonarr
    sonarr:
        image: "linuxserver/sonarr"
        restart: unless-stopped
        volumes:
            - ./data/sonarr/config:/config
            - ./data/nzbget/downloads:/downloads
            - ./data/transmission/downloads:/transmission
            - ./data/plex/media/tv:/tv
        env_file:
            - ./common.env
        healthcheck:
            test: if curl -f http://localhost:8989/ && curl -f http://nzbget:6789/ && curl -f http://hydra:5075/ ; then exit 0 ; else exit 1 ; fi

    # https://github.com/linuxserver/docker-radarr
    radarr:
        image: "linuxserver/radarr"
        restart: unless-stopped
        volumes:
            - ./data/radarr/config:/config
            - ./data/nzbget/downloads:/downloads
            - ./data/transmission/downloads:/transmission
            - ./data/plex/media/movies:/movies
        env_file:
            - ./common.env
        healthcheck:
            test: if curl -f http://localhost:7878/ && curl -f http://nzbget:6789/ && curl -f http://hydra:5075/ ; then exit 0 ; else exit 1 ; fi

    # https://github.com/linuxserver/docker-transmission
    transmission:
        image: "linuxserver/transmission"
        ports:
            - "51413:51413/tcp"
            - "51413:51413/udp"
        restart: unless-stopped
        volumes:
            - ./data/transmission/config:/config
            - ./data/transmission/downloads:/downloads
            - ./data/transmission/watch:/watch
        env_file:
            - ./common.env
        healthcheck:
            test: curl --fail http://localhost:9091/ || exit 1

    # https://github.com/linuxserver/docker-hydra
    hydra:
        image: "linuxserver/hydra"
        restart: unless-stopped
        volumes:
            - ./data/hydra/config:/config
            - ./data/hydra/downloads:/downloads
        env_file:
            - ./common.env
        healthcheck:
            test: curl --fail http://localhost:5075/ || exit 1

    # https://github.com/abiosoft/caddy-docker
    caddy:
        build:
            context: github.com/abiosoft/caddy-docker.git
            args:
                plugins: "git,filemanager,cors,realip,expires,cache,cloudflare"
        env_file:
            - ./caddy.env
        ports:
            - '80:80'
            - '443:443'
        restart: unless-stopped
        volumes:
            - ./Caddyfile:/etc/Caddyfile
            - caddy_certs_vol:/root/.caddy
            - /etc/localtime:/etc/localtime:ro

volumes:
    caddy_certs_vol:

