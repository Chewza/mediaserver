version: '3'
services:
    portainer:
        # https://github.com/portainer/portainer
        # https://hub.docker.com/r/portainer/portainer/
        image: "portainer/portainer"
        volumes:
            - ./portainer/config:/data
            - /var/run/docker.sock:/var/run/docker.sock
        env_file:
            - ./portainer/portainer.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    plex:
        # https://github.com/plexinc/pms-docker
        # https://hub.docker.com/r/plexinc/pms-docker/
        image: "plexinc/pms-docker:plexpass"
        volumes:
            - ./plex/config:/config
            - ./plex/media/tv:/tv
            - ./plex/media/movies:/movies
            - /tmp:/transcode
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./plex/plex.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    nzbget:
        # https://github.com/linuxserver/docker-nzbget
        # https://hub.docker.com/r/linuxserver/nzbget/
        image: "linuxserver/nzbget"
        volumes:
            - ./nzbget/config:/config
            - ./nzbget/downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./nzbget/nzbget.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    sonarr:
        # https://github.com/linuxserver/docker-sonarr
        # https://hub.docker.com/r/linuxserver/sonarr/
        image: "linuxserver/sonarr"
        volumes:
            - ./sonarr/config:/config
            - ./nzbget/downloads:/downloads
            - ./transmission/downloads:/transmission
            - ./plex/media/tv:/tv
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./sonarr/sonarr.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s
        depends_on:
            - nzbget
            - hydra

    radarr:
        # https://github.com/linuxserver/docker-radarr
        # https://hub.docker.com/r/linuxserver/radarr/
        image: "linuxserver/radarr"
        volumes:
            - ./radarr/config:/config
            - ./nzbget/downloads:/downloads
            - ./transmission/downloads:/transmission
            - ./plex/media/movies:/movies
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./radarr/radarr.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s
        depends_on:
            - nzbget
            - hydra

    plexpy:
        # https://github.com/linuxserver/docker-plexpy
        # https://hub.docker.com/r/linuxserver/plexpy/
        image: "linuxserver/plexpy"
        volumes:
            - ./plexpy/config:/config
            - ./plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./plexpy/plexpy.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s
        depends_on:
            - plex

    transmission:
        # https://github.com/linuxserver/docker-transmission
        # https://hub.docker.com/r/linuxserver/transmission/
        image: "linuxserver/transmission"
        ports:
            - "51413:51413/tcp"
            - "51413:51413/udp"
        volumes:
            - ./transmission/config:/config
            - ./transmission/downloads:/downloads
            - ./transmission/watch:/watch
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./transmission/transmission.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    hydra:
        # https://github.com/linuxserver/docker-hydra
        # https://hub.docker.com/r/linuxserver/hydra/
        image: "linuxserver/hydra"
        volumes:
            - ./hydra/config:/config
            - ./hydra/downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
            - /dev/rtc:/dev/rtc:ro
        env_file:
            - ./hydra/hydra.env
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    nginx:
        image: nginx
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/certs:/etc/nginx/certs:ro
            - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    nginx-gen:
        image: jwilder/docker-gen
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "true"
        command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/certs:/etc/nginx/certs:ro
            - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
            - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

    nginx-letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/certs:/etc/nginx/certs:rw
            - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        deploy:
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s
        environment:
            - "DEBUG=true"
            # - "ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory"