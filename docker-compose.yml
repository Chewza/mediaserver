version: '3'
services:

    # https://hub.docker.com/r/linuxserver/plex/
    plex:
        container_name: plex
        image: linuxserver/plex
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
            - 'VERSION=latest'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:plex.${CF_DOMAIN}'
            - 'traefik.port=32400'
        ports:
            - '32400:32400/tcp'
        volumes:
            - '${CONFIG_DIR}/plex:/config'
            - '${DOWNLOADS_DIR}:/downloads'
            - '/tmp:/transcode'

    # https://hub.docker.com/r/linuxserver/nzbget/
    nzbget:
        container_name: nzbget
        image: linuxserver/nzbget
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:nzbget.${CF_DOMAIN}'
            - 'traefik.port=6789'
        volumes:
            - '${CONFIG_DIR}/nzbget:/config'
            - '${DOWNLOADS_DIR}:/downloads'

    # https://hub.docker.com/r/linuxserver/sonarr/
    sonarr:
        container_name: sonarr
        image: linuxserver/sonarr
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:sonarr.${CF_DOMAIN}'
            - 'traefik.port=8989'
        volumes:
            - '${CONFIG_DIR}/sonarr:/config'
            - '${DOWNLOADS_DIR}:/downloads'

    # https://hub.docker.com/r/linuxserver/radarr/
    radarr:
        container_name: radarr
        image: linuxserver/radarr
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:radarr.${CF_DOMAIN}'
            - 'traefik.port=7878'
        volumes:
            - '${CONFIG_DIR}/radarr:/config'
            - '${DOWNLOADS_DIR}:/downloads'

    # https://hub.docker.com/r/linuxserver/hydra2/
    hydra:
        container_name: hydra
        image: linuxserver/hydra2
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:hydra.${CF_DOMAIN}'
            - 'traefik.port=5076'
        volumes:
            - '${CONFIG_DIR}/hydra:/config'
            - '${DOWNLOADS_DIR}:/downloads'

    # https://hub.docker.com/r/linuxserver/duplicati/
    duplicati:
        container_name: duplicati
        image: linuxserver/duplicati
        restart: unless-stopped
        environment:
            - 'PUID=${PUID}'
            - 'PGID=${PGID}'
            - 'TZ=${TZ}'
        labels:
            - 'traefik.enable=true'
            - 'traefik.frontend.rule=Host:duplicati.${CF_DOMAIN}'
            - 'traefik.port=8200'
        volumes:
            - '${CONFIG_DIR}/duplicati:/config'
            - '/:/source:ro'
    
    # https://hub.docker.com/_/traefik/
    traefik:
        container_name: traefik
        image: traefik
        restart: unless-stopped
        environment:
            - 'CF_API_EMAIL=${CF_API_EMAIL}'
            - 'CF_API_KEY=${CF_API_KEY}'
        ports:
            - '80:80/tcp'
            - '443:443/tcp'
        volumes:
            - './traefik.toml:/traefik.toml'
            - './acme.json:/acme.json'
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
        command:
            - '--acme.email=${CF_API_EMAIL}'

