version: '3.4'
services:

    # https://github.com/plexinc/pms-docker
    plex:
        image: "plexinc/pms-docker:plexpass"
        restart: unless-stopped
        volumes:
            - ./data/plex/config:/config
            - ./data/plex/media/tv:/tv
            - ./data/plex/media/movies:/movies
            - /tmp:/transcode
        env_file:
            - ./plex.env

    # https://github.com/Tautulli/Tautulli-Docker
    tautulli:
        image: "tautulli/tautulli"
        restart: unless-stopped
        volumes:
            - ./data/tautulli/config:/config
            - ./data/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        env_file:
            - ./common.env
        entrypoint: ["/wait-for-it.sh", "plex:32400", "-t", "300", "--", "/init"]
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8181/"]

    # https://github.com/linuxserver/docker-nzbget
    nzbget:
        image: "linuxserver/nzbget"
        restart: unless-stopped
        volumes:
            - ./data/nzbget/config:/config
            - ./data/nzbget/downloads:/downloads
        env_file:
            - ./common.env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:6789/"]

    # https://github.com/linuxserver/docker-sonarr
    sonarr:
        image: "linuxserver/sonarr"
        restart: unless-stopped
        volumes:
            - ./data/sonarr/config:/config
            - ./data/nzbget/downloads:/downloads
            - ./data/transmission/downloads:/transmission
            - ./data/plex/media/tv:/tv
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        env_file:
            - ./common.env
        entrypoint: ["/wait-for-it.sh", "nzbget:6789", "hydra:5076", "-t", "300", "--", "/init"]
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8989/"]

    # https://github.com/linuxserver/docker-radarr
    radarr:
        image: "linuxserver/radarr"
        restart: unless-stopped
        volumes:
            - ./data/radarr/config:/config
            - ./data/nzbget/downloads:/downloads
            - ./data/transmission/downloads:/transmission
            - ./data/plex/media/movies:/movies
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        env_file:
            - ./common.env
        entrypoint: ["/wait-for-it.sh", "nzbget:6789", "hydra:5076", "-t", "300", "--", "/init"]
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:7878/"]

    # https://github.com/linuxserver/docker-transmission
    transmission:
        image: "linuxserver/transmission"
        ports:
            - "51413:51413/tcp"
            - "51413:51413/udp"
        restart: unless-stopped
        volumes:
            - ./data/transmission/config:/config
            - ./data/transmission/downloads:/downloads
            - ./data/transmission/watch:/watch
        env_file:
            - ./common.env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9091/"]

    # https://github.com/theotherp/nzbhydra2
    hydra:
        image: "theotherp/nzbhydra2"
        restart: unless-stopped
        volumes:
            - ./data/hydra/config:/data
        env_file:
            - ./common.env
        # healthcheck:
        #     test: ["CMD", "curl", "-f", "http://localhost:5076/"]

    # https://github.com/nextcloud/docker
    nextcloud:
        image: "nextcloud"
        restart: unless-stopped
        volumes:
            - nextcloud_root:/var/www/html
        env_file:
            - ./common.env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80/"]
        depends_on:
            - mariadb

    # https://github.com/dockerfile/mariadb
    mariadb:
        image: "mariadb"
        restart: unless-stopped
        volumes:
            - mariadb_database:/var/lib/mysql
        env_file:
            - ./common.env

    # https://github.com/klutchell/docker-cloud9
    cloud9:
        image: "klutchell/cloud9:1.1.6"
        restart: unless-stopped
        volumes:
            - cloud9_home:/root
            - cloud9_workspace:/workspace
        env_file:
            - ./common.env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/"]
        privileged: true

    # https://github.com/docker-library/ghost
    ghost:
        image: "ghost:alpine"
        restart: unless-stopped
        volumes:
            - ghost_data:/var/lib/ghost
        env_file:
            - ./common.env
            - ./ghost.env
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:2368/"]

    # https://github.com/abiosoft/caddy-docker
    caddy:
        build:
            context: github.com/abiosoft/caddy-docker.git
            args:
                plugins: "git,filemanager,cors,realip,expires,cache,cloudflare,reauth"
        env_file:
            - ./common.env
        ports:
            - '80:80'
            - '443:443'
        restart: unless-stopped
        volumes:
            - ./Caddyfile:/etc/Caddyfile
            - caddy_certs:/root/.caddy
            - /etc/localtime:/etc/localtime:ro

    # https://github.com/blacklabelops/volumerize
    volumerize:
        image: blacklabelops/volumerize
        restart: unless-stopped
        volumes:
            - volumerize_cache:/volumerize-cache
            - ./:/volumes/mediaserver:ro
            - mariadb_database:/volumes/mariadb_database:ro
            - nextcloud_root:/volumes/nextcloud_root:ro
            - cloud9_home:/volumes/cloud9_home:ro
            - cloud9_workspace:/volumes/cloud9_workspace:ro
            - ghost_data:/volumes/ghost_data:ro
        env_file:
            - ./volumerize.env
        environment:
            - VOLUMERIZE_SOURCE=/volumes
            - "VOLUMERIZE_DUPLICITY_OPTIONS=
                --exclude /volumes/mediaserver/data/plex/media
                --exclude /volumes/mediaserver/data/nzbget/downloads
                --exclude /volumes/mediaserver/data/transmission/downloads"

volumes:
    caddy_certs:
    mariadb_database:
    nextcloud_root:
    cloud9_home:
    cloud9_workspace:
    volumerize_cache:
    ghost_data:

